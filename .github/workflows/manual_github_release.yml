name: Manual deploy release to GitHub public repo.

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'App version v*.*.*'
        required: true
      release_name:
        description: 'Name which will show in release'
        required: true
      release_notes:
        description: 'Release notes'
        required: true
      release_draft:
        description: 'Would it be a draft release?'
        type: boolean
        required: true
        default: true



env:
  release_repo: nova-wallet/nova-wallet-android-releases


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: ghcr.io/nova-wallet/build_tools:pr-3
      credentials:
        username: stepanLav
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      ACALA_PROD_AUTH_TOKEN: ${{ secrets.ACALA_PROD_AUTH_TOKEN }}
      ACALA_TEST_AUTH_TOKEN: ${{ secrets.ACALA_TEST_AUTH_TOKEN }}
      MOONBEAM_PROD_AUTH_TOKEN: ${{ secrets.MOONBEAM_PROD_AUTH_TOKEN }}
      MOONBEAM_TEST_AUTH_TOKEN: ${{ secrets.MOONBEAM_TEST_AUTH_TOKEN }}
      MOONPAY_PRODUCTION_SECRET: ${{ secrets.MOONPAY_PRODUCTION_SECRET }}
      MOONPAY_TEST_SECRET: ${{ secrets.MOONPAY_TEST_SECRET }}

      CI_KEYSTORE_PASS: ${{ secrets.CI_GITHUB_KEYSTORE_PASS }}
      CI_KEYSTORE_KEY_ALIAS: ${{ secrets.CI_GITHUB_KEYSTORE_KEY_ALIAS }}
      CI_KEYSTORE_KEY_PASS: ${{ secrets.CI_GITHUB_KEYSTORE_KEY_PASS }}

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: ./gradlew runTest

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/release/

  upload:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.release_repo }}
          persist-credentials: false
          fetch-depth: 0

      - name: Create a new tag
        continue-on-error: true
        run: |
          git tag ${{ github.event.inputs.app_version }}
          git push https://${{ secrets.PAT_GITHUB_RELEASE }}@github.com/${{ env.release_repo }}.git --tags

      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          name: apk
          path: app

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT_GITHUB_RELEASE }}
          tag_name: ${{ github.event.inputs.app_version }}
          name: ${{ github.event.inputs.release_name }}
          body: |
            ${{ github.event.inputs.release_notes }}
          draft: ${{ github.event.inputs.release_draft }}
          repository: ${{ env.release_repo }}
          files: ./app/app-release.apk
